{"version":3,"sources":["components/note.js","services/notes.js","components/notification.js","components/footer.js","components/add.js","components/app.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","date","onClick","urlBase","object","getAll","axios","get","then","response","data","create","newObject","post","update","id","put","Notification","message","Footer","style","color","fontStyle","fontSize","Add","notes","setNotes","noteService","useState","newNote","setNewNote","console","log","onSubmit","event","preventDefault","nota","Date","toISOString","Math","random","noteCreated","concat","value","onChange","target","type","App","props","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","initialData","length","toggleImportanceOf","find","n","changedNote","returnedNote","map","catch","error","setTimeout","filter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0aa76fa0.chunk.js","sourcesContent":["export const Note = ({note,toggleImportance}) => {\r\n    const label = note.important ? \"Make  not important\" : \"Make important\"\r\n\r\n    return (\r\n      <li className=\"note\">\r\n        {note.content} {note.date}\r\n        <button onClick={toggleImportance}>{label}</button>\r\n      </li>\r\n    )\r\n  }\r\n\r\n","import axios from \"axios\"\r\n\r\nconst urlBase = 'api/notes'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(urlBase)\r\n    return request.then(response => response.data)\r\n  }\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(urlBase,newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id,newObject) => {\r\n    const request = axios.put(`${urlBase}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst object = {\r\n    getAll,\r\n    create,\r\n    update\r\n}\r\nexport default object","const Notification = ({ message ,className}) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className={className}>\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default Notification","const Footer = () => {\r\n    const footerStyle = {\r\n        color:\"green\",\r\n        fontStyle:\"italic\",\r\n        fontSize:16\r\n    }\r\n    return (\r\n        <div style={footerStyle}>\r\n            <br />\r\n            <em>Note app, Department of Computer Science, University of Helsinki 2020</em>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer","import { useState } from \"react\"\r\nconst INITIAL_NOTE = \"A new Note...\"\r\n\r\nconst Add = ({notes,setNotes,noteService}) => {\r\n    const [newNote,setNewNote] = useState(\"\")\r\n    console.log(\"render Add\")\r\n\r\n    const handlerChangeNote = (event) => {\r\n        setNewNote(event.target.value)\r\n      }\r\n\r\n    const addNote = (event) => {\r\n    event.preventDefault()\r\n    const nota = {\r\n        content: newNote,\r\n        date: new Date().toISOString(),\r\n        important: Math.random() < 0.5,\r\n    }\r\n    \r\n    noteService\r\n        .create(nota)\r\n        .then(noteCreated => { \r\n        setNotes(notes.concat(noteCreated))\r\n        setNewNote(INITIAL_NOTE)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={addNote}>\r\n          <input value={newNote} onChange={handlerChangeNote}/>\r\n          <button type=\"submit\" >Submit</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Add","import { Note } from \"./note\"\r\nimport {useState, useEffect} from 'react'\r\nimport noteService from \"../services/notes\"\r\nimport Notification from \"./notification\"\r\nimport Footer from \"./footer.js\"\r\nimport Add from \"./add\"\r\n\r\n\r\nexport const App = (props) => {\r\n  const [notes,setNotes] = useState([])\r\n  const [showAll,setShowAll] = useState(true)\r\n  const [errorMessage, setErrorMessage ] = useState(null)\r\n\r\n  const hook = ()=> {\r\n    noteService\r\n      .getAll()\r\n      .then(initialData => setNotes(initialData))\r\n  } \r\n  useEffect(hook,[])\r\n  \r\n  console.log(\"render APP\",notes.length,\"notes\")\r\n\r\n  \r\n\r\n  \r\n  const handlerShowAll = () => {\r\n    setShowAll(!showAll)\r\n  }\r\n  const toggleImportanceOf = (id) => {\r\n    const note = notes.find(n => n.id === id)\r\n    const changedNote = {...note,important: !note.important }\r\n\r\n    noteService\r\n      .update(id,changedNote)\r\n      .then(returnedNote => {\r\n        console.log(returnedNote)\r\n        setNotes( notes.map ( n => n.id === id ? returnedNote : n ))\r\n      })\r\n      .catch(error => {\r\n        setErrorMessage(`the note '${note.content}' was already deleted from server`)\r\n        setTimeout(() => {\r\n          setErrorMessage(null)\r\n        }, 5000)\r\n        \r\n        setNotes(notes.filter(n => n.id !== id))\r\n      })\r\n  }\r\n \r\n  return (\r\n      <div>\r\n        <h1>Notes</h1>\r\n        <Notification message={errorMessage}/>\r\n\r\n        <ul>\r\n          {!showAll ? \r\n            notes.filter(note => note.important === true).map(note => <Note key={note.id} note={note} toggleImportance={ () => toggleImportanceOf(note.id)}></Note>) \r\n          : notes.map(note => <Note key={note.id} note={note} toggleImportance={() => toggleImportanceOf(note.id)}></Note>)}\r\n        </ul>\r\n        \r\n        <Add notes={notes} setNotes={setNotes} noteService={noteService}/>\r\n\r\n        <button onClick={handlerShowAll}>{showAll ? \"Important\": \"All\"}</button>\r\n\r\n        <Footer/>\r\n      </div>\r\n    )\r\n  }","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { App } from './components/app'\nimport './index.css'\n\n\nReactDOM.render(<App/>, document.getElementById('root'))\n\n\n\n\n\n\n"],"sourceRoot":""}